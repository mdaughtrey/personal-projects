!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
BACK	main.c	10;"	d	file:
COILA_MINUS_OFF	stepper.c	10;"	d	file:
COILA_MINUS_ON	stepper.c	9;"	d	file:
COILA_PLUS_OFF	stepper.c	8;"	d	file:
COILA_PLUS_ON	stepper.c	7;"	d	file:
COILB_MINUS_OFF	stepper.c	15;"	d	file:
COILB_MINUS_ON	stepper.c	14;"	d	file:
COILB_PLUS_OFF	stepper.c	13;"	d	file:
COILB_PLUS_ON	stepper.c	12;"	d	file:
DDR	lcd.c	35;"	d	file:
DDR_LCD_PORT	testmode.c	12;"	d	file:
DRIVER_FORWARD	easydriver.c	8;"	d	file:
DRIVER_REVERSE	easydriver.c	9;"	d	file:
DRIVER_STEP_OFF	easydriver.c	7;"	d	file:
DRIVER_STEP_ON	easydriver.c	6;"	d	file:
FORWARD	main.c	9;"	d	file:
ISR	serutil.c	/^ISR(USART0_RX_vect)$/;"	f
ISR	serutil.c	/^ISR(USART0_UDRE_vect)$/;"	f
KS0073_4LINES_MODE	lcd.c	74;"	d	file:
KS0073_EXTENDED_FUNCTION_REGISTER_OFF	lcd.c	73;"	d	file:
KS0073_EXTENDED_FUNCTION_REGISTER_ON	lcd.c	72;"	d	file:
LCD_FUNCTION_DEFAULT	lcd.c	57;"	d	file:
LCD_FUNCTION_DEFAULT	lcd.c	59;"	d	file:
LCD_FUNCTION_DEFAULT	lcd.c	63;"	d	file:
LCD_FUNCTION_DEFAULT	lcd.c	65;"	d	file:
PIN	lcd.c	38;"	d	file:
PIN	lcd.c	40;"	d	file:
PROGMEM	main.c	/^const char msgInit[] PROGMEM = "Init";$/;"	v
PROGMEM	serutil.c	/^u08 hexTable[16] PROGMEM = "0123456789abcdef";$/;"	v
PROGMEM	stepper.c	/^unsigned char stepSequence[] PROGMEM = $/;"	v
PROGMEM	testmode.c	/^char msgCRLF[] PROGMEM = "\\r\\n";$/;"	v
PROGMEM	testmode.c	/^char msgDone[] PROGMEM = "Test Done\\r\\n";$/;"	v
PROGMEM	testmode.c	/^char msgSequence[] PROGMEM = "Sequence\\r\\n";$/;"	v
PROGMEM	testmode.c	/^char msgShortFound[] PROGMEM = " Short Found\\r\\n";$/;"	v
PROGMEM	testmode.c	/^char msgShortTest[] PROGMEM = "Short Circuit Check\\r\\n";$/;"	v
RXBUFFERSIZE	serutil.c	37;"	d	file:
UART_BAUD_RATE	serutil.c	28;"	d	file:
UART_BAUD_SELECT	serutil.c	29;"	d	file:
_delayFourCycles	lcd.c	/^static inline void _delayFourCycles(unsigned int __count)$/;"	f	file:
asciiToHex	cmdproc.c	/^u08 asciiToHex(u08 ascii1, u08 ascii2)$/;"	f
cmd_Init	cmdproc.c	/^void cmd_Init(void)$/;"	f
cmd_dataHandler	cmdproc.c	/^void cmd_dataHandler(u08 input)$/;"	f
command	cmdproc.c	/^u08 command = 0;$/;"	v
dataRxBuffer	serutil.c	/^u08 dataRxBuffer[RXBUFFERSIZE];$/;"	v
delay	lcd.c	113;"	d	file:
diagled	diagleds.c	/^void diagled(unsigned char led, unsigned char state)$/;"	f
diagled_init	diagleds.c	/^void diagled_init(void)$/;"	f
e	dmc16207.c	/^void e(void)$/;"	f
lcdChar	dmc16207.c	/^void lcdChar(unsigned char data)$/;"	f
lcdData	dmc16207.c	/^void lcdData(unsigned char data)$/;"	f
lcdInit	dmc16207.c	/^void lcdInit(void)$/;"	f
lcdString	dmc16207.c	/^void lcdString(char * string)$/;"	f
lcdStringPtr	dmc16207.c	/^void lcdStringPtr(unsigned char * string)$/;"	f
lcd_clrscr	lcd.c	/^void lcd_clrscr(void)$/;"	f
lcd_command	lcd.c	/^void lcd_command(uint8_t cmd)$/;"	f
lcd_data	lcd.c	/^void lcd_data(uint8_t data)$/;"	f
lcd_e_delay	lcd.c	45;"	d	file:
lcd_e_high	lcd.c	46;"	d	file:
lcd_e_low	lcd.c	47;"	d	file:
lcd_e_toggle	lcd.c	48;"	d	file:
lcd_getxy	lcd.c	/^int lcd_getxy(void)$/;"	f
lcd_gotoxy	lcd.c	/^void lcd_gotoxy(uint8_t x, uint8_t y)$/;"	f
lcd_home	lcd.c	/^void lcd_home(void)$/;"	f
lcd_init	lcd.c	/^void lcd_init(uint8_t dispAttr)$/;"	f
lcd_newline	lcd.c	/^static inline void lcd_newline(uint8_t pos)$/;"	f	file:
lcd_putc	lcd.c	/^void lcd_putc(char c)$/;"	f
lcd_puts	lcd.c	/^void lcd_puts(const char *s)$/;"	f
lcd_puts_p	lcd.c	/^void lcd_puts_p(const char *progmem_s)$/;"	f
lcd_read	lcd.c	/^static uint8_t lcd_read(uint8_t rs) $/;"	f	file:
lcd_read	lcd.c	276;"	d	file:
lcd_rs_high	lcd.c	51;"	d	file:
lcd_rs_low	lcd.c	52;"	d	file:
lcd_rw_high	lcd.c	49;"	d	file:
lcd_rw_low	lcd.c	50;"	d	file:
lcd_waitbusy	lcd.c	/^static uint8_t lcd_waitbusy(void)$/;"	f	file:
lcd_write	lcd.c	/^static void lcd_write(uint8_t data,uint8_t rs) $/;"	f	file:
lcd_write	lcd.c	203;"	d	file:
main	main.c	/^int main(void)$/;"	f
paramIndex	cmdproc.c	/^u08 paramIndex = 0;$/;"	v
parameter	cmdproc.c	/^u08 parameter[4];$/;"	v
paramsRemaining	cmdproc.c	/^u08 paramsRemaining;$/;"	v
rxHead	serutil.c	/^volatile u08 rxHead;$/;"	v
rxTail	serutil.c	/^volatile u08 rxTail;$/;"	v
sequence	testmode.c	/^static void sequence(void)$/;"	f	file:
shortCheck	testmode.c	/^static void shortCheck(void)$/;"	f	file:
stepPtr	stepper.c	/^static char * stepPtr;$/;"	v	file:
stepper1Back	easydriver.c	/^void stepper1Back(unsigned char speed, unsigned int steps)$/;"	f
stepper1Back	stepper.c	/^void stepper1Back(void)$/;"	f
stepper1Forward	easydriver.c	/^void stepper1Forward(unsigned char speed, unsigned int steps)$/;"	f
stepper1Forward	stepper.c	/^void stepper1Forward(void)$/;"	f
stepper1Stop	easydriver.c	/^void stepper1Stop(void)$/;"	f
stepper1Stop	stepper.c	/^void stepper1Stop(void)$/;"	f
stepperInit	easydriver.c	/^void stepperInit(void)$/;"	f
stepperInit	stepper.c	/^void stepperInit(void)$/;"	f
testMode	testmode.c	/^void testMode(void)$/;"	f
toggle_e	lcd.c	/^static void toggle_e(void)$/;"	f	file:
uart_counter	serutil.c	/^static volatile u08 uart_counter = 0;$/;"	v	file:
uart_data_ptr	serutil.c	/^static volatile u08 *uart_data_ptr = 0;$/;"	v	file:
uart_get_buffered	serutil.c	/^u16 uart_get_buffered (void)$/;"	f
uart_init	serutil.c	/^void uart_init(void)$/;"	f
uart_send_async	serutil.c	/^void uart_send_async (u08 *buf, u08 size)$/;"	f
uart_send_char	serutil.c	/^void uart_send_char (u08 character)$/;"	f
uart_send_hex_byte	serutil.c	/^void uart_send_hex_byte(u08 byte)$/;"	f
uart_send_sync	serutil.c	/^void uart_send_sync(u08 *buf, u08 size)$/;"	f
