:q!#include <avr/io.h>
#include <util/delay.h>
#include <avr/pgmspace.h>
#include <avr/interrupt.h>
#include <stdint.h>
#include <avr/wdt.h>
#include <typedefs.h>

u08 timerEvent = 0;

//#define PULSE_MIN 587
#define PULSE_MIN 600
#define PULSE_MAX 640

ISR(SIG_OUTPUT_COMPARE0)
{
  timerEvent = 1;
}

/* ---------------------------------------------------------------------- */
/*      End Interrupt Service Routines                                        */
/* ---------------------------------------------------------------------- */

void longDelay(void)
{
  u08 count;
  for (count = 0; count < 16; count++)
    {
      _delay_ms(16);
    }
}


void irLEDOn(void)
{
  PORTE | _BV(7);
  PORTA &= ~_BV(1);
}

void irLEDOff(void)
{
  PORTE &= ~_BV(7);
  PORTA |= _BV(1);
}

void initMotorDriver(void)
{
  int count = 100;
  int pulseWidth;
  while (count > 0)
    {
      if (timerEvent == 0)
	{
	  continue;
	}
      timerEvent = 0;
      PORTC |= _BV(6);
      for (pulseWidth = 0; pulseWidth < 800; pulseWidth++);
      PORTC &= ~_BV(6);
      count--;
    }
  count = 100;
  while (count > 0)
    {
      if (timerEvent == 0)
	{
	  continue;
	}
      timerEvent = 0;
      PORTC |= _BV(6);
      for (pulseWidth = 0; pulseWidth < 400; pulseWidth++);
      PORTC &= ~_BV(6);
      count--;
    }
}

int main(void)
{
  u16 count;
  u16 count2;
  u16 timerCount = PULSE_MIN;
  u16 serialData;

	DDRA = 0xff;
	DDRC = 0x40; // 01000000
	DDRE = 0x80;

//  OCR0A = 0xc0;
//  TCCR0A = _BV(WGM01) | _BV(CS00) | _BV(CS02);		/* Timer 0 prescaler =CLK/256 */
//  TIMSK0 |= _BV(OCIE0A);

  //  irLEDOn();
//  sei();
  int wait = 0;
  int pulseWidth = 0;
//  initMotorDriver();
  while (1)
    {
    PORTC |= _BV(6);
    longDelay();
    PORTC &= ~_BV(6);
    longDelay();
    continue;

      if (PINC & (1 << 4))	/* ir sensor detect */
	{
	  PORTA &= ~_BV(3);
	}
      else
	{
	  PORTA |= _BV(3);
	}

      if (PINC & (1 << 5)) /* If motor is enabled */
	{
	  PORTA &= ~_BV(2);
	  irLEDOn();
	  if (timerEvent == 1)
	    {
	      timerEvent = 0;
	      PORTA |= _BV(4);
	      PORTC |= _BV(6);	/* set motor output */
	      for (pulseWidth = 0; pulseWidth < 500; pulseWidth++);
	      PORTA &= ~_BV(4);
	      PORTC &= ~_BV(6);	/* reset motor output */
	    }
	}
      else			/* motor is off */
	{
	  PORTA |= _BV(2);
	  irLEDOff();
	  if (timerEvent == 1)
	    {
	      timerEvent = 0;
	      PORTA |= _BV(4);
	      PORTC |= _BV(6);	/* set motor output */
	      for (pulseWidth = 0; pulseWidth < 400; pulseWidth++);
	      PORTC &= ~_BV(6);	/* reset motor output */
	      PORTA &= ~_BV(4);
	    }
	}

/*       if (PINC & _BV(5)) */
/* 	{ */
/* 	  PORTA &= ~_BV(3); */
/* 	  pulseWidth = PULSE_MAX; */
/* 	  lampOn(); */

/* 	} */
/*       else */
/* 	{ */
/* 	  PORTA |= _BV(3); */
/* 	} */
      

/*       for (count = 0; count < 200; count++) */
/* 	{ */
/* 	  pulseWidth = count; */
/* 	  for (count2 = 0; count2 < 5000; count2++); */
/* 	} */
/*       for (count = 200; count > 0; count--) */
/* 	{ */
/* 	  pulseWidth = count; */
/* 	  for (count2 = 0; count2 < 5000; count2++); */
/* 	} */
      //      pulseWidth = 0;
      //      for (count = 0; count < 8000; count++);
      //PORTC |= _BV(6);		/* lamp on */
      //            PORTC |= _BV(4);		/* lamp on */
      //for (count = 0; count < 200; count++);
      //PORTC &= ~_BV(6);		/* lamp off */
      //            PORTC &= ~_BV(4);		/* lamp off */
    }
  return 0;
}
